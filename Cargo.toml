[workspace]
members = [
    "back",
    "embed",
    "macros",
    "rt",
    "examples/render",
]
default-members = [
    "back",
    "embed",
    "macros",
    "rt",
    "examples/render",
]
resolver = "3"

[workspace.package]
repository = "https://github.com/kpreid/naga-rust/"
license = "MIT OR Apache-2.0"

[workspace.dependencies]
naga-rust-back = { version = "0.2.0", path = "back" }
naga-rust-embed = { version = "0.1.0", path = "embed" }
naga-rust-macros = { version = "0.1.0", path = "macros" }
naga-rust-rt = { version = "0.1.0", path = "rt" }

arrayvec = { version = "0.7.6", default-features = false }
bitflags = "2.9"
exhaust = { version = "0.2.0", default-features = false }
# must match version used by naga for the sake of proc::Namer :(
hashbrown = { version = "0.16.0", default-features = false }
indoc = { version = "2.0.1", default-features = false }
naga = { version = "26.0.0", default-features = false }
num-traits = { version = "0.2.19", default-features = false }
once_cell = { version = "1.21.3", default-features = false }
paste = {version = "1.0.15", default-features = false }
pretty_assertions = { version = "1.2.0" }

[workspace.lints.rust]
# rustc lints that are set to deny
elided_lifetimes_in_paths = "deny"

# rustc lints that are set to warn
explicit_outlives_requirements = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
noop_method_call = "warn"
redundant_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unnameable_types = "warn"
unused_extern_crates = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
# This lint has false positives on dev-dependencies. Occasionally turn it on to audit non-dev deps.
# unused_crate_dependencies = "warn"

[workspace.lints.clippy]
# clippy lint groups
pedantic = { level = "warn", priority = -1 }

# clippy default lints that are set to allow
bool_assert_comparison = "allow" # not necessarily clearer

# clippy::pedantic lints that are set to allow
explicit_iter_loop = "allow"
float_cmp = "allow"
match_same_arms = "allow"
semicolon_if_nothing_returned = "allow" # TODO: clean up and enable
too_many_lines = "allow"
unused_self = "allow" # TODO: enable?

# clippy lints that are set to deny
should_panic_without_expect = "deny"

# clippy lints that are set to warn
assigning_clones = "warn"
cast_lossless = "warn"
cast_possible_wrap = "warn"
doc_markdown = "warn"
exhaustive_enums = "warn"
exhaustive_structs = "warn"
into_iter_without_iter = "warn"
inconsistent_struct_constructor = "warn"
infinite_loop = "warn"
iter_without_into_iter = "warn"
manual_let_else = "warn"
map_unwrap_or = "warn"
map_with_unused_argument_over_ranges = "warn"
missing_fields_in_debug = "warn"
module_name_repetitions = "warn"
needless_pass_by_value = "warn"
option_as_ref_cloned = "warn"
pub_without_shorthand = "warn"
return_self_not_must_use = "warn"
# shadow_unrelated = "warn" # TODO: enable
suboptimal_flops = "warn"
trivially_copy_pass_by_ref = "warn"
undocumented_unsafe_blocks = "warn"
uninlined_format_args = "warn"
unnecessary_self_imports = "warn"
unnecessary_wraps = "warn"
unused_async = "warn"
wrong_self_convention = "warn"
